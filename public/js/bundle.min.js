(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["JStore"] = factory();
	else
		root["JStore"] = factory();
})(this, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./functions/page.js":
/*!***************************!*\
  !*** ./functions/page.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "pageHandler": () => (/* binding */ pageHandler)
/* harmony export */ });
const root = document.querySelector("#root");

const pages = {
  admin: async function () {
    root.innerHTML = await Blog.request("admin");
  },

  "admin/login": async function () {
    root.innerHTML = "";
  },
};

const pageHandler = async function (query = String | "") {
  if (query == "") return false;
  if (!query.match(/\?p=.*/g)) return false;

  query = encodeURI(query.replace(/\?p=/g, ""));
  if (query == "") return false;

  return pages[query]();
};


/***/ }),

/***/ "./functions/responsive.js":
/*!*********************************!*\
  !*** ./functions/responsive.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "mobile": () => (/* binding */ mobile),
/* harmony export */   "tablet": () => (/* binding */ tablet),
/* harmony export */   "desktopMedium": () => (/* binding */ desktopMedium),
/* harmony export */   "desktopLarge": () => (/* binding */ desktopLarge)
/* harmony export */ });
/**
 * Responsive Web Design
 *
 * Detect screen width for mobile, tablet, desktop
 *
 * @author wadahkode <mvp.dedefilaras@gmail.com>
 * @since version 0.1.0
 */
const classList = document.querySelectorAll("[class]");

const mobile = async () => {
  return classList.forEach(
    (item) =>
      (item.classList = item.classList
        .toString()
        .replace(/lg-/g, "xs:")
        .replace(/md-/g, "xs:")
        .replace(/sm-/g, "xs:")
        .replace(/xs:/g, "xs-"))
  );
};

const tablet = async () => {
  return classList.forEach(
    (item) =>
      (item.classList = item.classList
        .toString()
        .replace(/lg-/g, "sm:")
        .replace(/md-/g, "sm:")
        .replace(/xs-/g, "sm:")
        .replace(/sm:/g, "sm-"))
  );
};

const desktopMedium = async () => {
  return classList.forEach(
    (item) =>
      (item.classList = item.classList
        .toString()
        .replace(/lg-/g, "md:")
        .replace(/sm-/g, "md:")
        .replace(/xs-/g, "md:")
        .replace(/md:/g, "md-"))
  );
};

const desktopLarge = async () => {
  return classList.forEach(
    (item) =>
      (item.classList = item.classList.toString().replace(/lg:/g, "lg-"))
  );
};


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!****************************!*\
  !*** ./functions/index.js ***!
  \****************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _page_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./page.js */ "./functions/page.js");
/* harmony import */ var _responsive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./responsive.js */ "./functions/responsive.js");



const breakPoint = {
  extraSmall: [],
  small: [],
  medium: [],
  large: [],
};

document.addEventListener("DOMContentLoaded", () => {
  const resizeWin = new ResizeObserver(main);
  resizeWin.observe(document.body);

  (0,_page_js__WEBPACK_IMPORTED_MODULE_0__.pageHandler)(location.search);
});

for (let i = 320; i <= window.screen.width; i++) {
  breakPoint.extraSmall[i] = {
    mediaQuery: matchMedia(`(min-width: 320px) and (max-width: 640px)`),
  };
}

for (let i = 641; i <= window.screen.width; i++) {
  breakPoint.small[i] = {
    mediaQuery: matchMedia(`(min-width: 641px) and (max-width: 768px)`),
  };
}

for (let i = 769; i <= window.screen.width; i++) {
  breakPoint.medium[i] = {
    mediaQuery: matchMedia(`(min-width: 769px) and (max-width: 1366px)`),
  };
}

for (let i = 1367; i <= window.screen.width; i++) {
  breakPoint.large[i] = {
    mediaQuery: matchMedia(`(min-width: 1367px) and (max-width: ${i}px)`),
  };
}

function main() {
  const { clientWidth } = document.body;
  if (
    breakPoint.extraSmall[clientWidth] !== undefined &&
    breakPoint.extraSmall[clientWidth].mediaQuery.matches
  ) {
    return (0,_responsive_js__WEBPACK_IMPORTED_MODULE_1__.mobile)();
  } else {
    if (
      breakPoint.small[clientWidth] !== undefined &&
      breakPoint.small[clientWidth].mediaQuery.matches
    ) {
      return (0,_responsive_js__WEBPACK_IMPORTED_MODULE_1__.tablet)();
    } else if (
      breakPoint.medium[clientWidth] !== undefined &&
      breakPoint.medium[clientWidth].mediaQuery.matches
    ) {
      return (0,_responsive_js__WEBPACK_IMPORTED_MODULE_1__.desktopMedium)();
    } else if (
      breakPoint.large[clientWidth] !== undefined &&
      breakPoint.large[clientWidth].mediaQuery.matches
    ) {
      return (0,_responsive_js__WEBPACK_IMPORTED_MODULE_1__.desktopLarge)();
    }
  }
}

})();

/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,